import React, { useState, useEffect } from 'react';

export default function BingoCard() {
  const [grid, setGrid] = useState([]);
  const [marked, setMarked] = useState(Array(5).fill().map(() => Array(5).fill(false)));
  
  const letters = ['HI @ 12AM',
'AK @ 1AM',
'GA @ 7PM',
'IA @ 7PM',
'KY @ 7PM',
'SC @ 7PM',
'VT @ 7PM',
'VA @ 7PM',
'NC @ 7:30:00 PM',
'OH @ 7:30:00 PM',
'WV @ 7:30:00 PM',
'AL @ 8PM',
'CT @ 8PM',
'DE @ 8PM',
'DC @ 8PM',
'FL @ 8PM',
'IL @ 8PM',
'ME @ 8PM',
'MD @ 8PM',
'MA @ 8PM',
'MS @ 8PM',
'MI @ 8PM',
'NH @ 8PM',
'NJ @ 8PM',
'OK @ 8PM',
'PA @ 8PM',
'RI @ 8PM',
'TN @ 8PM',
'AR @ 8:30:00 PM',
'AZ @ 9PM',
'CO @ 9PM',
'IO @ 9PM',
'KS @ 9PM',
'LA @ 9PM',
'MI @ 9PM',
'MN @ 9PM',
'NE @ 9PM',
'NM @ 9PM',
'NY @ 9PM',
'ND @ 9PM',
'SD @ 9PM',
'TX @ 9PM',
'WI @ 9PM',
'WY @ 9PM',
'MT @ 10PM',
'NV @ 10PM',
'UT @ 10PM',
'CA @ 11PM',
'ID @ 11PM',
'OR @ 11PM',
'WA @ 11PM',




















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































];

  // Populate the grid on component mount
  useEffect(() => {
    const newGrid = Array.from({ length: 5 }, () =>
      Array.from({ length: 5 }, () => letters[Math.floor(Math.random() * letters.length)])
    );
    setGrid(newGrid);
  }, []);

  const handleClick = (row, col) => {
    const newMarked = [...marked];
    newMarked[row][col] = !newMarked[row][col];
    setMarked(newMarked);
    checkForBingo(newMarked);
  };

  const checkForBingo = (markedGrid) => {
    const hasBingo = checkRows(markedGrid) || checkColumns(markedGrid) || checkDiagonals(markedGrid);
    if (hasBingo) alert("Bingo!");
  };

  const checkRows = (markedGrid) => markedGrid.some(row => row.every(cell => cell));
  const checkColumns = (markedGrid) => 
    markedGrid[0].some((_, colIndex) => markedGrid.every(row => row[colIndex]));
  const checkDiagonals = (markedGrid) => {
    const leftDiag = markedGrid.every((row, idx) => row[idx]);
    const rightDiag = markedGrid.every((row, idx) => row[4 - idx]);
    return leftDiag || rightDiag;
  };

  return (
    <div>
      <h1>Bingo Card</h1>
      <div style={{ display: "grid", gridTemplateColumns: "repeat(5, 50px)", gap: "5px" }}>
        {grid.map((row, rowIndex) => (
          row.map((letter, colIndex) => (
            <button
              key={`${rowIndex}-${colIndex}`}
              onClick={() => handleClick(rowIndex, colIndex)}
              style={{
                width: "50px",
                height: "50px",
                backgroundColor: marked[rowIndex][colIndex] ? "lightgreen" : "lightgrey",
              }}
            >
              {letter}
            </button>
          ))
        ))}
      </div>
    </div>
  );
}
